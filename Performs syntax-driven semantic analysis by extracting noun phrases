import nltk
from nltk.tokenize import word_tokenize
from nltk.tag import pos_tag
from nltk.chunk import ne_chunk

def extract_noun_phrases(sentence):
    # Tokenize the sentence into words
    words = word_tokenize(sentence)
    
    # Perform part-of-speech tagging
    tagged_words = pos_tag(words)
    
    # Use NLTK's named entity chunker to identify noun phrases
    chunked_sentence = ne_chunk(tagged_words)
    
    # Extract noun phrases and their meanings
    noun_phrases = []
    for subtree in chunked_sentence:
        if isinstance(subtree, nltk.Tree) and subtree.label() == 'NP':
            # Extract the noun phrase as a string
            noun_phrase = ' '.join(word for word, tag in subtree.leaves())
            
            # Extract the meaning of the noun phrase
            meaning = ' '.join(tag for word, tag in subtree.leaves())
            
            # Add the noun phrase and its meaning to the list
            noun_phrases.append((noun_phrase, meaning))
    
    return noun_phrases

# Example sentence
sentence = "The quick brown fox jumps over the lazy dog"

# Extract noun phrases and their meanings from the sentence
noun_phrases = extract_noun_phrases(sentence)

# Print the extracted noun phrases and their meanings
print("Noun Phrases and Their Meanings:")
for noun_phrase, meaning in noun_phrases:
    print(f"Noun Phrase: {noun_phrase}, Meaning: {meaning}")
