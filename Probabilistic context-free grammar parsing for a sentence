import nltk
from nltk import PCFG
from nltk.parse import ViterbiParser

# Define a sample PCFG
pcfg_grammar = PCFG.fromstring("""
    S -> NP VP [1.0]
    NP -> Det N [0.5] | N [0.3] | NP PP [0.2]
    VP -> V NP [0.6] | VP PP [0.4]
    PP -> P NP [1.0]
    Det -> 'the' [0.8] | 'a' [0.2]
    N -> 'cat' [0.6] | 'dog' [0.4]
    V -> 'chased' [0.7] | 'sat' [0.3]
    P -> 'on' [0.5] | 'under' [0.5]
""")

# Create a parser with the PCFG
parser = ViterbiParser(pcfg_grammar)

# Define a sample sentence
sentence = "the cat chased the dog".split()

# Parse the sentence
trees = parser.parse(sentence)

# Print the parse trees and their probabilities
for tree in trees:
    print("Probability:", tree.prob())
    print(tree)
